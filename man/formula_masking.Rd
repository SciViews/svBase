% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formula_masking.R
\name{formula_masking}
\alias{formula_masking}
\title{Formula-masking interface using either standard evaluation, or formulas}
\usage{
formula_masking(
  ...,
  .max.args = NULL,
  .must.be.named = FALSE,
  .make.names = FALSE,
  .no.se = FALSE,
  .no.se.msg = gettext("Standard evaluation is not allowed."),
  .envir = parent.frame(2L),
  .frame = parent.frame(),
  .verbose = .op$verbose
)
}
\arguments{
\item{...}{Arguments to be processed by formula-masking.}

\item{.max.args}{The maximum allowed arguments in \code{...}.}

\item{.must.be.named}{If \code{TRUE}, all arguments must be named.}

\item{.make.names}{If \code{TRUE}, unnamed arguments are named automatically.}

\item{.no.se}{If \code{TRUE}, standard evaluation is not allowed.}

\item{.no.se.msg}{The message to be used if standard evaluation is not
allowed.}

\item{.envir}{The environment where to expand formulas (possibly superseded
by the environment attached to the first formula).}

\item{.frame}{The frame where the focus in the calling stack should be set
in error messages (not used yet).}

\item{.verbose}{If \code{TRUE}, some additional information about formulas
substitution is printed.}
}
\value{
A list with components:
\itemize{
\item \code{dots}: A list of arguments, either expressions (if standard evaluation
was used) or expressions extracted from the right-hand side of the
formulas (if formulas were used).
\item \code{env}: The environment where the expressions should be evaluated.
\item \code{are_formulas}: \code{TRUE} if formulas were used, \code{FALSE} if standard
evaluation was used.
}
}
\description{
The formula-masking is a little bit like the data-masking used in dplyr,
except it uses formulas for non-standard evaluation of the arguments,
otherwise, it uses standard evaluation. It allows to use both approaches
(standard and non-standard) within the same function. Moreover, the intention
of the user and the possible non-standard evaluation of the arguments are
clearer through formulas.
}
\examples{
# TODO...
}
\seealso{
\code{\link[=formula_select]{formula_select()}}, \code{\link[rlang:is_formula]{rlang::is_formula()}}, \code{\link[rlang:f_rhs]{rlang::f_lhs()}}, \code{\link[rlang:f_rhs]{rlang::f_rhs()}}
}
