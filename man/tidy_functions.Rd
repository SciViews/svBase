% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_functions.R
\name{tidy_functions}
\alias{tidy_functions}
\alias{tgroup_by}
\alias{tungroup}
\alias{trename}
\alias{trename_with}
\alias{tfilter}
\alias{tfilter_ungroup}
\alias{tselect}
\alias{tmutate}
\alias{tmutate_ungroup}
\alias{ttransmute}
\alias{ttransmute_ungroup}
\alias{tsummarise}
\alias{tfull_join}
\alias{tleft_join}
\alias{tright_join}
\alias{tinner_join}
\title{Tidy functions (mainly from {dplyr} and {tidyr}) to manipulate data frames}
\usage{
tidy_functions()

tgroup_by(.data, ...)

tungroup(.data, ...)

trename(.data, ...)

trename_with(.data, .fn, .cols = everything(), ...)

tfilter(.data, ...)

tfilter_ungroup(.data, ...)

tselect(.data, ...)

tmutate(.data, ...)

tmutate_ungroup(.data, ..., .keep = "all")

ttransmute(.data, ...)

ttransmute_ungroup(.data, ...)

tsummarise(.data, ...)

tfull_join(x, y, by = NULL, suffix = c(".x", ".y"), copy = FALSE, ...)

tleft_join(x, y, by = NULL, suffix = c(".x", ".y"), copy = FALSE, ...)

tright_join(x, y, by = NULL, suffix = c(".x", ".y"), copy = FALSE, ...)

tinner_join(x, y, by = NULL, suffix = c(".x", ".y"), copy = FALSE, ...)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a lazy
data frame (e.g. from dbplyr or dtplyr). See \code{\link[=mutate]{mutate()}} for more details.}

\item{...}{Arguments dependent to the context of the function and most of
the time, not evaluated in a standard way (cf. the tidyverse approach).}

\item{.fn}{A function to use.}

\item{.cols}{The list of the column where to apply the transformation. See
\code{\link[=rename_with]{rename_with()}} with a list of functions that can be used here to specify
easily these columns.}

\item{.keep}{Which columns to keep. The default is \code{"all"}, possible values
are \code{"used"}, \code{"unused"}, or \code{"none"} (see \code{\link[=mutate]{mutate()}}).}

\item{x}{A data frame or lazy data frame, as for \code{.data}.}

\item{y}{A second data frame or lazy data frame.}

\item{by}{A list of names of the columns to use for joining the two data
frames.}

\item{suffix}{The suffix to the column names to use to differentiate the
columns that come from the first or the second data frame. By default it is
\code{c(".x", ".y")}.}

\item{copy}{If \code{x} and \code{y} are not from the same data source, and \code{copy} is
\code{TRUE}, then \code{y} will be copied into the same src as \code{x}. This allows you
to join tables across srcs, but it is a potentially expensive operation so
you must opt into it..}
}
\value{
See corresponding "non-t" function for the full help page with
indication of the return values.
}
\description{
The Tidyverse defines a coherent set of tools to manipulate
data frames that use a non-standard evaluation and sometimes require extra
care. These functions, like \code{\link[=mutate]{mutate()}} or \code{\link[=summarise]{summarise()}} are defined in the
{dplyr} and {tidyr} packages. When using variants, like {dtplyr} for
\strong{data.frame} objects, or {dbplyr} to work with external databases,
successive commands in a pipeline are pooled together but not computed. One
has to \code{\link[=collect]{collect()}} the result to get its final form. The tidy functions have
the same name as their {dplyr} or {tidyr} equivalent, but prefixed with "t".
These functions are otherwise quasi-identical and use the same code, but
their class is both \strong{function} and \strong{tidy_fn}. This notation using a "t"
prefix is there to draw the attention on their particularities.
}
\note{
The help page here is very basic and it aims mainly to list all the
tidy functions. For more complete help, see their "non-t" counterparts in
{dplyr} or {tidyr}, or use the {svMisc}'s \code{.?tmutate} syntax to link to the
correct page.
}
\examples{
# TODO...
}
